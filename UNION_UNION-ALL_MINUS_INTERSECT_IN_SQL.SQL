/* LIMITATIONS-
				1- NUMBER COLUMNS SHOULD BE SAME.
				2- DATATYPE OF COLUMNS SHOULD BE SAME.
				3- SEQUENCE OF COLUMNS SHOLUD BE SAME.
				4- NAME OF COLUMNS SHOULD BE SAME. */


--first table
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103);

--second table
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103);

--UNION IT WILL MEGE TWO TABLES AND SHOW ONLY COMMON RECORDS.
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103,104)
UNION
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103);


--UNION ALL IT WILL MEGE TWO TABLES AND SHOW ONLY COMMON RECORDS AND DUPLICATE ALSO
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103,104)
UNION ALL
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103);


--MINUS IN SQL
--MINUS IS USED TO SHOW THE RESULTS FROM TWO TABLES.
--IS IS 0 WHEN OUR DTA MIGRATION FROM SOURCE TABLE TO TARGET TABLE IS CORRECT.
--IT WILL SHOW THE ALTERNATE RECORD OF TABLE ONE ONLY
--IT DO NOT SHOW THE ALTERNATE RECORDS OF TABLE 2
--FOR THIS WE HAVE TO CHECK A-B AND B-1.


--IT SHOWING 0 MEANS OUR DATA TRANSFORMATION FROM SOURCE TO TARGET TABLE IS SUCCESSFUL.
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103)
MINUS
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103);

--MINUS WILL SHOE THE ALTERNATE RECORDS FROM TABE ONE ONLY.
--AS HERE  IT WILL SHOW THE ALTERNATE RECORDS LIKE 102,105 AND 106
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103,104,105,106)
MINUS
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (101,102,103);
